{
    "Description": "AWS CloudFormation Template to deploy components simulating CIS integration",
    "Parameters": {
        "COGNITOPOOL": {
            "Default": "eu-west-2_kWs9QfKn6",
            "Type": "String",
            "Description": "Id of the cognito pool in which smartcard users are created"
        },
        "COGNITOCLIENT": {
            "Default": "56laregh69mus25djqa34s5nun",
            "Type": "String",
            "Description": "Client ID used to interact with cognito user pool"
        },
        "APIKEY": {
            "Default": "UamrXffOlh7Qa83vWIlxR6TXI9uSenmi5Uf7pyCD",
            "Type": "String",
            "Description": "The API Key used to invoke the CIS Proxy API Gateway function"
        },
        "HSCNProxyServiceName": {
            "Default": "com.amazonaws.vpce.eu-west-2.vpce-svc-0313606ef47636b35",
            "Type": "String",
            "Description": "The Shared HSCN Proxy Service Endpoint"
        },
        "EnvironmentName": {
            "Default": "prod",
            "Type": "String",
            "Description": "The logical environment name"
        },
        "CISFQDN": {
            "Default": "gas.national.ncrs.nhs.uk",
            "Type": "String",
            "Description": "The FQDN of the CIS endpoint for retrieving the SAML assertion"
        },
        "EXECMODE": {
            "Default": "live",
            "Type": "String",
            "Description": "Flag indicating the execution mode for the CIS proxy. A value of stub returns a hard-coded response"
        },
        "DEFAULTPWD": {
            "Default": "wedieriTYeve?rjk458975789sdkljksdfuih234egt",
            "Type": "String",
            "Description": "Default password for cognito accounts for smartcard users - in a real system this would be the Secrets Manager key where the password is stored"
        },
        "APIENDPOINT": {
            "Default": "https://wttcujmdph.execute-api.eu-west-2.amazonaws.com",
            "Type": "String",
            "Description": "The API endpoint where the token can be exchanged for SAML"
        },
        "VPCENDPOINTPORT": {
            "Default": "8080",
            "Type": "String",
            "Description": "The port number on which the HSCN proxy runs"
        }
    },
    "AWSTemplateFormatVersion": "2010-09-09",
    "Outputs": {
        "cvdcisvpcendpointdnsnames": {
            "Description": "DNS Name for the VPC endpoint",
            "Value": {
                "Fn::Select": [
                    1,
                    {
                        "Fn::Split": [
                            ":",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::GetAtt": [
                                            "cvdcisvpcendpoint",
                                            "DnsEntries"
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    },
    "Conditions": {
        "ProdNaming": {
            "Fn::Equals": [
                {
                    "Ref": "EnvironmentName"
                },
                "prod"
            ]
        }
    },
    "Resources": {
        "cvdcognitosmartcardfunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "cvd19pilotcoderepo",
                    "S3Key": "cisproxy-v0.06.zip"
                },
                "Description": "function that authenticates user via smartcard SAML",
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    },
                    {
                        "Value": {
                            "Ref": "EnvironmentName"
                        },
                        "Key": "Environment"
                    }
                ],
                "Environment": {
                    "Variables": {
                        "VPCENDPOINTPORT": {
                            "Ref": "VPCENDPOINTPORT"
                        },
                        "COGNITOPOOL": {
                            "Ref": "COGNITOPOOL"
                        },
                        "APIKEY": {
                            "Ref": "APIKEY"
                        },
                        "COGNITOCLIENT": {
                            "Ref": "COGNITOCLIENT"
                        },
                        "CISFQDN": {
                            "Ref": "CISFQDN"
                        },
                        "EXECMODE": {
                            "Ref": "EXECMODE"
                        },
                        "VPCENDPOINT": {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ":",
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::GetAtt": [
                                                        "cvdcisvpcendpoint",
                                                        "DnsEntries"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "DEFAULTPWD": {
                            "Ref": "DEFAULTPWD"
                        },
                        "APIENDPOINT": {
                            "Ref": "APIENDPOINT"
                        }
                    }
                },
                "Handler": "smarcardcognitohandler.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "cvd19CISLambdaRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs12.x",
                "FunctionName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "EnvironmentName"
                            },
                            "-",
                            "cvd19PilotSmartcardCognitoAuthLambda"
                        ]
                    ]
                }
            }
        },
        "cvd19CISLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "EnvironmentName"
                            },
                            "-",
                            "cvd19CISLambdaRole"
                        ]
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess"
                ],
                "Path": "/service-role/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "ServerlessRestApiProdStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "ServerlessRestApiDeployment018ba24a95"
                },
                "RestApiId": {
                    "Ref": "ServerlessRestApi"
                },
                "StageName": "Prod"
            }
        },
        "cvdcisproxyfunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "cvd19pilotcoderepo",
                    "S3Key": "cisproxy-v0.06.zip"
                },
                "Description": "function that proxies a request through to CIS",
                "VpcConfig": {
                    "SubnetIds": [
                        "subnet-8bd84bf1",
                        "subnet-6072d42c"
                    ],
                    "SecurityGroupIds": [
                        "sg-5be54b3e"
                    ]
                },
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    },
                    {
                        "Value": {
                            "Ref": "EnvironmentName"
                        },
                        "Key": "Environment"
                    }
                ],
                "Environment": {
                    "Variables": {
                        "VPCENDPOINTPORT": {
                            "Ref": "VPCENDPOINTPORT"
                        },
                        "COGNITOPOOL": {
                            "Ref": "COGNITOPOOL"
                        },
                        "COGNITOCLIENT": {
                            "Ref": "COGNITOCLIENT"
                        },
                        "CISFQDN": {
                            "Ref": "CISFQDN"
                        },
                        "EXECMODE": {
                            "Ref": "EXECMODE"
                        },
                        "VPCENDPOINT": {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ":",
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::GetAtt": [
                                                        "cvdcisvpcendpoint",
                                                        "DnsEntries"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "DEFAULTPWD": {
                            "Ref": "DEFAULTPWD"
                        }
                    }
                },
                "Handler": "proxyrequesthandler.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "cvd19CISLambdaRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs12.x",
                "FunctionName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "EnvironmentName"
                            },
                            "-",
                            "cvd19PilotCISProxyLambda"
                        ]
                    ]
                }
            }
        },
        "cvdcisproxyfunctionApiEventPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "cvdcisproxyfunction"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/saml/RoleAssertion",
                        {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            }
                        }
                    ]
                }
            }
        },
        "ServerlessRestApiDeployment018ba24a95": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "ServerlessRestApi"
                },
                "Description": "RestApi deployment id: 018ba24a95da46fc1912f8f5e666e619d25380d3",
                "StageName": "Stage"
            }
        },
        "cvdcisvpcendpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcId": "vpc-f1125f99",
                "SubnetIds": [
                    "subnet-8bd84bf1",
                    "subnet-6072d42c"
                ],
                "SecurityGroupIds": [
                    "sg-5be54b3e"
                ],
                "ServiceName": {
                    "Ref": "HSCNProxyServiceName"
                },
                "PrivateDnsEnabled": false,
                "VpcEndpointType": "Interface"
            }
        },
        "cvdcognitosmartcardfunctionApiEventPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "cvdcognitosmartcardfunction"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/saml/CognitoSmartcardAuth",
                        {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            }
                        }
                    ]
                }
            }
        },
        "ServerlessRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Body": {
                    "info": {
                        "version": "1.0",
                        "title": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    "paths": {
                        "/saml/RoleAssertion": {
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${cvdcisproxyfunction.Arn}/invocations"
                                    }
                                },
                                "security": [
                                    {
                                        "api_key": []
                                    }
                                ],
                                "responses": {}
                            }
                        },
                        "/saml/CognitoSmartcardAuth": {
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${cvdcognitosmartcardfunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        }
                    },
                    "swagger": "2.0",
                    "securityDefinitions": {
                        "api_key": {
                            "type": "apiKey",
                            "name": "x-api-key",
                            "in": "header"
                        }
                    }
                }
            }
        },
        "cvd19CustomPolicyLambdaRole": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "EnvironmentName"
                            },
                            "-",
                            "cvd19CISIntegrationPolicy"
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "ec2:*",
                                "cognito-identity:*",
                                "cognito-idp:*"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "cvd19CISLambdaRole"
                    }
                ]
            }
        }
    }
}