{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
      "cvd19LambdaRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "EnvironmentName"
                },
                "-",
                "cvd19LambdaRole"
              ]
            ]
          },
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess"
          ],
          "Path": "/service-role/",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ]
          }
        }
      },
      "cvdS3Bucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "BucketEncryption": {
            "ServerSideEncryptionConfiguration": [
              {
                "ServerSideEncryptionByDefault": {
                  "SSEAlgorithm": "AES256"
                }
              }
            ]
          },
          "LoggingConfiguration": {
            "DestinationBucketName": {
              "Ref": "cvdS3LogBucket"
            },
            "LogFilePrefix": "S3AccessLogs/"
          },
          "BucketName": {
            "Fn::If": [
              "ProdNaming",
              {
                "Ref": "S3BucketName"
              },
              {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "EnvironmentName"
                    },
                    {
                      "Ref": "S3BucketName"
                    }
                  ]
                ]
              }
            ]
          },
          "PublicAccessBlockConfiguration": {
            "IgnorePublicAcls": true,
            "BlockPublicPolicy": true,
            "BlockPublicAcls": true,
            "RestrictPublicBuckets": true
          },
          "NotificationConfiguration": {
            "LambdaConfigurations": [
              {
                "Filter": {
                  "S3Key": {
                    "Rules": [
                      {
                        "Name": "prefix",
                        "Value": "inbox/"
                      }
                    ]
                  }
                },
                "Function": {
                  "Fn::GetAtt": [
                    "cvd19PilotInviteSendFunction",
                    "Arn"
                  ]
                },
                "Event": "s3:ObjectCreated:Put"
              },
              {
                "Filter": {
                  "S3Key": {
                    "Rules": [
                      {
                        "Name": "prefix",
                        "Value": "upload/"
                      }
                    ]
                  }
                },
                "Function": {
                  "Fn::GetAtt": [
                    "cvd19PilotExcelProcessFunction",
                    "Arn"
                  ]
                },
                "Event": "s3:ObjectCreated:Put"
              },
              {
                "Filter": {
                  "S3Key": {
                    "Rules": [
                      {
                        "Name": "prefix",
                        "Value": "processed/"
                      }
                    ]
                  }
                },
                "Function": {
                  "Fn::GetAtt": [
                    "cvd19PilotResultsSummaryFunction",
                    "Arn"
                  ]
                },
                "Event": "s3:ObjectCreated:Put"
              },
              {
                "Filter": {
                  "S3Key": {
                    "Rules": [
                      {
                        "Name": "prefix",
                        "Value": "processedupload/"
                      }
                    ]
                  }
                },
                "Function": {
                  "Fn::GetAtt": [
                    "cvd19PilotUploadsSummaryFunction",
                    "Arn"
                  ]
                },
                "Event": "s3:ObjectCreated:Put"
              }
            ]
          },
          "VersioningConfiguration": {
            "Status": "Suspended"
          }
        }
      },
      "cloudTrailForObjectLogging": {
        "Type": "AWS::CloudTrail::Trail",
        "Properties": {
          "EventSelectors": [
            {
              "IncludeManagementEvents": false,
              "DataResources": [
                {
                  "Values": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "cvdS3Bucket"
                          },
                          "/"
                        ]
                      ]
                    }
                  ],
                  "Type": "AWS::S3::Object"
                }
              ],
              "ReadWriteType": "All"
            }
          ],
          "S3KeyPrefix": "CloudTrailLogs",
          "IsLogging": true,
          "TrailName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "EnvironmentName"
                },
                {
                  "Ref": "CloudTrailTrailName"
                }
              ]
            ]
          },
          "S3BucketName": {
            "Ref": "cvdS3LogBucket"
          }
        },
        "DependsOn": [
          "cloudTrailBucketPolicy"
        ]
      },
      "cvd19PilotUploadsSummaryFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": "cvd19pilotcoderepo",
            "S3Key": "processresults.zip"
          },
          "Description": "The lambda function that reads the uploaded files and sends a summary to the SNS topic. The Service Management team email address are subscribed to this topic",
          "Tags": [
            {
              "Value": "SAM",
              "Key": "lambda:createdBy"
            },
            {
              "Value": {
                "Ref": "EnvironmentName"
              },
              "Key": "Environment"
            }
          ],
          "Environment": {
            "Variables": {
              "RESULTS_SNS_TOPIC": {
                "Ref": "cvd19resultssnstopic"
              }
            }
          },
          "Handler": "count_uploads_function.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "cvd19LambdaRole",
              "Arn"
            ]
          },
          "Timeout": 300,
          "Runtime": "python3.7",
          "FunctionName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "EnvironmentName"
                },
                "-",
                "cvd19PilotUploadsSummaryFunction"
              ]
            ]
          }
        },
        "DependsOn": [
          "cvd19LambdaRole"
        ]
      },
      "cvd19statuscheckFunctionLambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:invokeFunction",
          "FunctionName": {
            "Ref": "cvd19PilotInviteSendFunction"
          },
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:aws:s3:::",
                {
                  "Fn::If": [
                    "ProdNaming",
                    {
                      "Ref": "S3BucketName"
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "EnvironmentName"
                          },
                          {
                            "Ref": "S3BucketName"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          "Principal": "s3.amazonaws.com"
        }
      },
      "cvdS3LogBucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "AccessControl": "LogDeliveryWrite",
          "BucketEncryption": {
            "ServerSideEncryptionConfiguration": [
              {
                "ServerSideEncryptionByDefault": {
                  "SSEAlgorithm": "AES256"
                }
              }
            ]
          },
          "BucketName": {
            "Fn::If": [
              "ProdNaming",
              {
                "Ref": "S3LogBucketName"
              },
              {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "EnvironmentName"
                    },
                    {
                      "Ref": "S3LogBucketName"
                    }
                  ]
                ]
              }
            ]
          },
          "PublicAccessBlockConfiguration": {
            "IgnorePublicAcls": true,
            "BlockPublicPolicy": true,
            "BlockPublicAcls": true,
            "RestrictPublicBuckets": true
          },
          "VersioningConfiguration": {
            "Status": "Suspended"
          }
        },
        "DependsOn": [
          "cvd19statuscheckFunctionLambdaPermission"
        ]
      },
      "cvd19PilotResultsSummaryFunctionLambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:invokeFunction",
          "FunctionName": {
            "Ref": "cvd19PilotResultsSummaryFunction"
          },
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:aws:s3:::",
                {
                  "Fn::If": [
                    "ProdNaming",
                    {
                      "Ref": "S3BucketName"
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "EnvironmentName"
                          },
                          {
                            "Ref": "S3BucketName"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          "Principal": "s3.amazonaws.com"
        }
      },
      "cvd19PilotInviteSendFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": "cvd19pilotcoderepo",
            "S3Key": "lambda.zip"
          },
          "Description": "The lambda function that reads the file and triggers the SNS topic for each entry. It moves the file to the processed folder when complete",
          "Tags": [
            {
              "Value": "SAM",
              "Key": "lambda:createdBy"
            },
            {
              "Value": {
                "Ref": "EnvironmentName"
              },
              "Key": "Environment"
            }
          ],
          "Environment": {
            "Variables": {
              "SMS_ENABLED": {
                "Ref": "SMSEnabled"
              },
              "TOPIC_ARN": {
                "Ref": "NotificationTopicArn"
              },
              "SUBJECT_SMS": {
                "Ref": "SMSSubject"
              }
            }
          },
          "Handler": "bundle.handler",
          "Role": {
            "Fn::GetAtt": [
              "cvd19LambdaRole",
              "Arn"
            ]
          },
          "Timeout": 300,
          "Runtime": "nodejs12.x",
          "FunctionName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "EnvironmentName"
                },
                "-",
                "cvd19PilotTestInviteSendLambda"
              ]
            ]
          }
        },
        "DependsOn": [
          "cvd19LambdaRole"
        ]
      },
      "cvd19processExcelFunctionLambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:invokeFunction",
          "FunctionName": {
            "Ref": "cvd19PilotExcelProcessFunction"
          },
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:aws:s3:::",
                {
                  "Fn::If": [
                    "ProdNaming",
                    {
                      "Ref": "S3BucketName"
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "EnvironmentName"
                          },
                          {
                            "Ref": "S3BucketName"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          "Principal": "s3.amazonaws.com"
        }
      },
      "cloudTrailBucketPolicy": {
        "Type": "AWS::S3::BucketPolicy",
        "Properties": {
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": "s3:GetBucketAcl",
                "Principal": {
                  "Service": "cloudtrail.amazonaws.com"
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "cvdS3LogBucket"
                      }
                    ]
                  ]
                },
                "Effect": "Allow",
                "Sid": "AWSCloudTrailAclCheck20150319"
              },
              {
                "Action": "s3:PutObject",
                "Principal": {
                  "Service": "cloudtrail.amazonaws.com"
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "cvdS3LogBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                "Effect": "Allow",
                "Sid": "AWSCloudTrailWrite20150319"
              }
            ]
          },
          "Bucket": {
            "Ref": "cvdS3LogBucket"
          }
        }
      },
      "cvdUploadOnlyRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": {
            "Fn::If": [
              "ProdNaming",
              {
                "Ref": "IAMRoleName"
              },
              {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "EnvironmentName"
                    },
                    {
                      "Ref": "IAMRoleName"
                    }
                  ]
                ]
              }
            ]
          },
          "Path": "/",
          "Description": "A role to enable Service Management to upload files to a specific S3 bucket only",
          "Policies": [
            {
              "PolicyName": "S3UploadOnly",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": [
                      "s3:ListBucket"
                    ],
                    "Resource": [
                      {
                        "Fn::GetAtt": [
                          "cvdS3Bucket",
                          "Arn"
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "cvdS3Bucket",
                                "Arn"
                              ]
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Effect": "Allow",
                    "Sid": "VisualEditor0"
                  },
                  {
                    "Action": [
                      "s3:PutObject"
                    ],
                    "Resource": [
                      {
                        "Fn::GetAtt": [
                          "cvdS3Bucket",
                          "Arn"
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "cvdS3Bucket",
                                "Arn"
                              ]
                            },
                            "/inbox/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "cvdS3Bucket",
                                "Arn"
                              ]
                            },
                            "/upload/*"
                          ]
                        ]
                      }
                    ],
                    "Effect": "Allow",
                    "Sid": "VisualEditor2"
                  },
                  {
                    "Action": [
                      "s3:GetObject",
                      "s3:ListObjects",
                      "s3:ListObjectsV2"
                    ],
                    "Resource": [
                      {
                        "Fn::GetAtt": [
                          "cvdS3Bucket",
                          "Arn"
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "cvdS3Bucket",
                                "Arn"
                              ]
                            },
                            "/processed/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "cvdS3Bucket",
                                "Arn"
                              ]
                            },
                            "/processedupload/*"
                          ]
                        ]
                      }
                    ],
                    "Effect": "Allow",
                    "Sid": "VisualEditor3"
                  },
                  {
                    "Action": "s3:HeadBucket",
                    "Resource": "*",
                    "Effect": "Allow",
                    "Sid": "VisualEditor1"
                  }
                ]
              }
            }
          ],
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Condition": {
                  "Bool": {
                    "aws:MultiFactorAuthPresent": "true"
                  }
                },
                "Principal": {
                  "AWS": "arn:aws:iam::347250048819:root"
                }
              }
            ]
          }
        }
      },
      "cvd19resultssnstopic": {
        "Type": "AWS::SNS::Topic",
        "Properties": {
          "TopicName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "EnvironmentName"
                },
                {
                  "Ref": "SNSTopicName"
                }
              ]
            ]
          }
        }
      },
      "cvd19PilotExcelProcessFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": "cvd19pilotcoderepo",
            "S3Key": "processexcel.zip"
          },
          "Description": "The lambda function that processes an excel template with phone numbers and message template. If creates a processed CSV in the inbox folder for SMS sending",
          "Tags": [
            {
              "Value": "SAM",
              "Key": "lambda:createdBy"
            },
            {
              "Value": {
                "Ref": "EnvironmentName"
              },
              "Key": "Environment"
            }
          ],
          "Environment": {
            "Variables": {
              "SMS_ENABLED": {
                "Ref": "SMSEnabled"
              },
              "OUTPUT_FOLDER": "inbox",
              "RESULTS_FOLDER": "processedupload",
              "TOPIC_ARN": {
                "Ref": "NotificationTopicArn"
              },
              "SUBJECT_SMS": {
                "Ref": "SMSSubject"
              },
              "S3BUCKETNAME": {
                "Fn::If": [
                  "ProdNaming",
                  {
                    "Ref": "S3BucketName"
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "EnvironmentName"
                        },
                        {
                          "Ref": "S3BucketName"
                        }
                      ]
                    ]
                  }
                ]
              }
            }
          },
          "Handler": "lambda_function.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "cvd19LambdaRole",
              "Arn"
            ]
          },
          "Timeout": 300,
          "Runtime": "python3.7",
          "FunctionName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "EnvironmentName"
                },
                "-",
                "cvd19PilotTestExcelProcessLambda"
              ]
            ]
          }
        },
        "DependsOn": [
          "cvd19LambdaRole"
        ]
      },
      "cvd19PilotResultsSummaryFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": "cvd19pilotcoderepo",
            "S3Key": "processresults.zip"
          },
          "Description": "The lambda function that reads the processed files and sends a summary to the SNS topic. The Service Management team email address are subscribed to this topic",
          "Tags": [
            {
              "Value": "SAM",
              "Key": "lambda:createdBy"
            },
            {
              "Value": {
                "Ref": "EnvironmentName"
              },
              "Key": "Environment"
            }
          ],
          "Environment": {
            "Variables": {
              "RESULTS_SNS_TOPIC": {
                "Ref": "cvd19resultssnstopic"
              }
            }
          },
          "Handler": "count_results_function.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "cvd19LambdaRole",
              "Arn"
            ]
          },
          "Timeout": 300,
          "Runtime": "python3.7",
          "FunctionName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "EnvironmentName"
                },
                "-",
                "cvd19PilotResultsSummaryFunction"
              ]
            ]
          }
        },
        "DependsOn": [
          "cvd19LambdaRole"
        ]
      },
      "cvd19CustomPolicyLambdaRole": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "EnvironmentName"
                },
                "-",
                "cvd19PilotTestInvitePolicy"
              ]
            ]
          },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "sns:*"
                ],
                "Resource": [
                  {
                    "Ref": "NotificationTopicArn"
                  },
                  {
                    "Ref": "cvd19resultssnstopic"
                  }
                ],
                "Effect": "Allow"
              },
              {
                "Action": [
                  "s3:DeleteObject",
                  "s3:GetObject",
                  "s3:PutObject"
                ],
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "cvdS3Bucket",
                            "Arn"
                          ]
                        },
                        "/inbox/*"
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "cvdS3Bucket",
                            "Arn"
                          ]
                        },
                        "/processed/*"
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "cvdS3Bucket",
                            "Arn"
                          ]
                        },
                        "/upload/*"
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "cvdS3Bucket",
                            "Arn"
                          ]
                        },
                        "/processedupload/*"
                      ]
                    ]
                  }
                ],
                "Effect": "Allow"
              },
              {
                "Action": [
                  "kms:Get*",
                  "kms:GenerateDataKey*",
                  "kms:Decrypt"
                ],
                "Resource": {
                  "Ref": "KMSKeyArn"
                },
                "Effect": "Allow"
              }
            ]
          },
          "Roles": [
            {
              "Ref": "cvd19LambdaRole"
            }
          ]
        }
      },
      "cvd19PilotUploadsSummaryFunctionLambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:invokeFunction",
          "FunctionName": {
            "Ref": "cvd19PilotUploadsSummaryFunction"
          },
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:aws:s3:::",
                {
                  "Fn::If": [
                    "ProdNaming",
                    {
                      "Ref": "S3BucketName"
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "EnvironmentName"
                          },
                          {
                            "Ref": "S3BucketName"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          "Principal": "s3.amazonaws.com"
        }
      }
    },
    "Conditions": {
      "ProdNaming": {
        "Fn::Equals": [
          {
            "Ref": "EnvironmentName"
          },
          "prod"
        ]
      }
    },
    "Description": "AWS CloudFormation Template to add role and S3 bucket for Covid 19 elective surgery pilot. ",
    "Parameters": {
      "EnvironmentName": {
        "Default": "prod",
        "Type": "String",
        "Description": "The logical environment name"
      },
      "SMSSubject": {
        "Default": "NHS",
        "Type": "String",
        "Description": "Legacy SenderID for AWS SES"
      },
      "SMSEnabled": {
        "Default": "true",
        "Type": "String",
        "Description": "true/false flag to enable or disable SMS sending"
      },
      "KMSKeyArn": {
        "Default": "arn:aws:kms:eu-west-2:338178287474:key/6dc3c828-1fec-4632-8990-f2db786ff688",
        "Type": "String",
        "Description": "The Arn of the KMS key used for SNS publishing"
      },
      "S3LogBucketName": {
        "Default": "cvd19logbucket",
        "Type": "String",
        "Description": "The name of the bucket that holds the logs"
      },
      "S3BucketName": {
        "Default": "cvd19electivesurgerylists",
        "Type": "String",
        "Description": "The name of the bucket that holds the list of contact numbers and message text"
      },
      "IAMRoleName": {
        "Default": "CovidElectiveS3UploadOnlyRole",
        "Type": "String",
        "Description": "The name of the IAM role that users assume to upload files"
      },
      "NotificationTopicArn": {
        "Default": "arn:aws:sns:eu-west-2:338178287474:prd-gov-1-infra-messaging-sns-topic",
        "Type": "String",
        "Description": "The Arn of the topic to publish S3 events"
      },
      "CloudTrailTrailName": {
        "Default": "CovidElectiveSurgeryAccessTrail",
        "Type": "String",
        "Description": "The name for the CloudTrail Trail"
      },
      "SNSTopicName": {
        "Default": "cvdelvetivesummresults",
        "Type": "String",
        "Description": "The SNS Topic Name to which results summaries are published"
      }
    }
  }